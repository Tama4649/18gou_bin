１．学習部の説明  
  
　人造棋士18号（以下、18号という）の学習部は、やねうら王の学習部の動作環境制限を大幅に  
　緩めており、以下のような特徴があります。  
  
  
　・教師局面生成、学習時のバッファサイズの下限を1000万局面から1万局面に修正  
  
　　　これにより、非力でメモリが少ないPCでも、スワップファイルIOオーバーヘッドが少なく  
　　　なり、高速に動作させることができるようになっています。  
  
　　　もちろん、バッファサイズが小さくなることで、ある程度の精度低下はありますが、  
　　　実行時間の短縮のほうが重要ですので、こういう仕様にしてあります。  
  
  
　・learnコマンドの拡張  
  
　　　learnコマンドのパラメータに、勝敗補正項を追加しています。これがPR文にある  
　　　「スパルタ式」のパラメータになります。  
  
　　　パラメータ説明  
  
　　　　win_cor		期待勝率を勝っている際の補正項。ディフォルトは1  
　　　　lose_cor	期待勝率を負けている際の補正項。ディフォルトは0  
　　　　draw_cor	期待勝率が引き分けの際の補正項。ディフォルトは0.5  
  
　　　使用例  
  
　　　　教師局面格納パスに格納されている教師局面ファイル全てを対象とし、eta30、λ0.33、  
　　　　勝ち補正1、負け補正0、引き分け補正0.5とし、ミニバッチサイズ100万として学習する。  
  
　　　　learn save_only_once targetdir [教師局面格納パス] bat 100 eta 30 lambda 0.33 win_cor 1 lose_cor 0 draw_cor 0.5  
  
  
　・testコマンドの拡張  
  
　　　ここが18号のキモです。追加されたコマンドを順を追って説明します。  
　　　ここに紹介するコマンド以外にもありますが、正直言って意味のないコマンドばかりなので  
　　　割愛します。使いたい方はextra/test_cmd.cppを見てください。  
  
　　　以下に出てくるfeaturesオプションとは、評価値のどの部分に対して操作するのかを指定する  
　　　オプションです。  
  
　　　-1 : KK、KKP、KPP全てに対して操作（ディフォルト）  
　　　 0 : KKの手番共通側に対して操作  
　　　 1 : KKの手番側に対して操作  
　　　 2 : KKPの手番共通側に対して操作  
　　　 3 : KKPの手番側に対して操作  
　　　 4 : KPPの手番共通側に対して操作  
　　　 5 : KPPの手番側に対して操作  
　　　 6 : KKに対して操作  
　　　 7 : KKPに対して操作  
　　　 8 : KPPに対して操作  
  
  
　　　evalmerge bl2オプション  
  
　　　　dir1の評価関数とdir2の評価関数をブレンドする際、dir1の評価値が0だったら、dir2の  
　　　　評価関数の評価値をそのまま適用します。  
　　　　featuresオプションも指定できます。  
  
　　　　使用例  
  
　　　　　dir1の評価関数とdir2の評価関数を6:4の割合でブレンドし、dir1の評価値が0だったら  
　　　　　dir2の評価値とし、KPPだけに適用したものをdir3に出力する。  
  
　　　　　test evalmerge dir1 dir2 dir3 60 bl2 feature 8  
  
  
　　　evalmerge padオプション  
  
　　　　dir1の評価値が0以外なら変更なし、0ならdir2の評価値で埋めます。  
　　　　featuresオプションも指定できます。  
  
　　　　使用例  
  
　　　　　dir1の評価値が0ならdir2の評価値で埋め、KKPだけに適用したものをdir3に出力する。  
  
　　　　　test evalmerge dir1 dir2 dir3 0 pad feature 7  
  
  
　　　evalmerge noiseオプション  
  
　　　　指定した確率でdir1の評価値をdir2の評価値でランダムに置き換えます。  
　　　　featuresオプションも指定できます。  
  
　　　　使用例  
  
　　　　　30%の確率で、dir1の評価値をdir2の評価値置き換えたものをdir3に出力する。  
  
　　　　　test evalmerge dir1 dir2 dir3 30 noise  
  
  
　　　evalmerge eqオプション  
  
　　　　指定した範囲内の評価値を、指定した％分増減します。  
　　　　音楽をやっていてDAWやエフェクターを使ったことがある人はイメージしやすいかと  
　　　　思いますが、評価値のパラメトリックイコライザーとして動作します。  
　　　　featuresオプションも指定できます。  
  
　　　　使用例  
  
　　　　　dir1のKKの評価値が-5000以下の値を80%にしたものをdir3に出力する。  
  
　　　　　test evalmerge dir1 dir1 dir3 80 eq -20000 -5000 feature 6  
  
  
　　　evalmerge rngblオプション  
  
　　　　指定した範囲内の評価値だけ、ブレンドの対象にします。  
　　　　featuresオプションも指定できます。  
  
　　　　使用例  
  
　　　　　dir1のKPPの評価値が-500～500の時に、dir2の評価値と8:2でブレンドしたものをdir3に出力する。  
  
　　　　　test evalmerge dir1 dir2 dir3 80 rngbl -500 500 feature 8  
  
  
　　　evalmerge rngrepオプション  
  
　　　　指定した範囲内の評価値をdir2の評価値で置き換えます。  
　　　　featuresオプションも指定できます。  
  
　　　　使用例  
  
　　　　　dir1のKPPの評価値が-500～500の時に、dir2の評価値に置き換えたものをdir3に出力する。  
  
　　　　　test evalmerge dir1 dir2 dir3 80 rngrep -500 500 feature 8  
  
  
　　　evalmerge addオプション  
  
　　　　指定した％分、dir2の評価値を上乗せします。  
　　　　featuresオプションも指定できます。  
　　　　このオプションは、複数の評価関数を指定した割合でブレンドしたい場合に使用します。  
  
　　　　使用例  
  
　　　　　workdir1,2  : ブレンド用ワークディレクトリ  
　　　　　apery_sdt5  : Apery_sdt5のKPPT版の評価関数  
　　　　　tanuki-sdt5 : ぽんぽこの評価関数  
　　　　　Qhapaq-sdt5 : Qhapaqの評価関数  
  
　　　　　上記のように評価関数が格納されているとして、Apery70%、ぽんぽこ20%、Qhapaq10%の割合で  
　　　　　ブレンドした評価関数を作りたい場合、以下のように指定します。  
  
　　　　　test evalmerge apery_sdt5 apery_sdt5 workdir1 70 eq -20000 20000  
　　　　　test evalmerge workdir1 tanuki-sdt5 workdir2 20 add  
　　　　　test evalmerge workdir2 Qhapaq-sdt5 workdir1 10 add  
  
　　　　　これでworkdir1に求めるブレンド評価関数が出来上がります。  
   
    
　　　evalexam2  
  
　　　　evaldirで指定されたパスの評価関数ファイルについて、評価値範囲毎に含まれる局面数の分布を  
　　　　出力します。  
　　　　評価関数の構成を理解していないと、見てもなんだかわからないと思います。  
　　　　以下の表示例の意味がわからない方は、上記のevalmergeコマンドを使わないほうが身のためです。  
  
　　　　使用例  
  
　　　　　evaldir dir1  
　　　　　test evalexam2  
  
　　　　表示例  
  
FeatureType    : KK  
  
評価値範囲　　　共通の局面数　手番ボーナスの局面数  
　　　↓　　　　　　↓　　　　　↓  
      - -10000 :          0 ,          0  
-9999 -  -8000 :          0 ,          0  
-7999 -  -6000 :          6 ,          0  
-5999 -  -4000 :        158 ,          8  
-3999 -  -2000 :        874 ,        172  
-1999 -  -1000 :        816 ,        498  
 -999 -   -500 :        517 ,        676  
 -499 -   -100 :        729 ,        773  
  -99 -     -1 :        168 ,        332  
             0 :          9 ,        504  
    1 -     99 :        171 ,        393  
  100 -    499 :        739 ,       1362  
  500 -    999 :        524 ,        881  
 1000 -   1999 :        813 ,        708  
 2000 -   3999 :        875 ,        254  
 4000 -   5999 :        156 ,          0  
 6000 -   7999 :          6 ,          0  
 8000 -   9999 :          0 ,          0  
10000 -        :          0 ,          0  
  
FeatureType    : KKP  
      - -10000 :      23848 ,         52  
-9999 -  -8000 :      73287 ,       1004  
-7999 -  -6000 :     209457 ,      13950  
-5999 -  -4000 :     470059 ,     123706  
-3999 -  -2000 :     940368 ,     751154  
-1999 -  -1000 :     786161 ,    1035383  
 -999 -   -500 :     663279 ,     849531  
 -499 -   -100 :    1144836 ,    1018193  
  -99 -     -1 :     603455 ,    1009407  
             0 :     327166 ,    1377733  
    1 -     99 :     603202 ,     863307  
  100 -    499 :    1144959 ,     931310  
  500 -    999 :     663441 ,     729577  
 1000 -   1999 :     785908 ,     843840  
 2000 -   3999 :     940346 ,     538302  
 4000 -   5999 :     470060 ,      64779  
 6000 -   7999 :     209447 ,       4966  
 8000 -   9999 :      73311 ,        230  
10000 -        :      23838 ,          4  
  
FeatureType    : KPP  
      - -10000 :          4  
-9999 -  -8000 :        156  
-7999 -  -6000 :       1652  
-5999 -  -4000 :      13302  
-3999 -  -2000 :     128888  
-1999 -  -1000 :     796322  
 -999 -   -500 :    4577378  
 -499 -   -100 :   47173900  
  -99 -     -1 :   41296652  
             0 :    6641914  
    1 -     99 :   40872464  
  100 -    499 :   47846768  
  500 -    999 :    3938342  
 1000 -   1999 :     664576  
 2000 -   3999 :     133332  
 4000 -   5999 :      13666  
 6000 -   7999 :       1148  
 8000 -   9999 :        148  
10000 -        :         12  
  
  
オマケ  
  
キメラコマンドとfeaturesオプションをうまく指定すると、手番側の評価をA評価関数で行い、非手番側の  
評価をB評価関数で行うという、１つのエンジンで２つの評価関数による二人三脚を行う評価を行えるように  
できます。  
ちょうどマジンガーＺに出てくる「あしゅら男爵」が作れるのですｗ  
  
例えば、手番側は自分の評価関数、非手番側はライバルの評価関数にすると、探索時にライバルの思考を  
取り入れながら評価するので、ライバルよりPonderがヒットしやすくなり、けっこう強くなります。  
これはKPPT型評価関数だからできることで、KPP_KKPT型ではなかなか難しいことです。  
  
例：  
  
　test evalmerge dir1  dir2 work1 0 feature 0  
　test evalmerge work1 dir2 work2 0 feature 2  
　test evalmerge work2 dir2 work1 0 feature 4  
  
　上記のコマンドを実行すると、手番側ではdir1の評価値、非手番側ではdir2の評価値を使う評価関数に  
　なります。  
  
  
2018/1/6　オマケ追記  
  
evalconvertコマンドの使い方の説明についての要望があるようなのですが、これは18号のコマンドではなく、  
やねうら王に元々備わっているコマンドなので説明は控えさせていただいていたのですが、ソースを読み解く  
必要がある部分もありますので、コマンドの書式だけ説明します。  
  
書式：  test evalconvert intype indir outtype outdir  
  
  intype, outtype  
    評価関数タイプの指定。以下の値が指定できる。（代表的なもののみ記載）  
    indirにintypeに指定したタイプと違うファイルが入っていたらエラーになるので注意。  
    
    kppt16　…………　AperyのKPPT型評価関数（16ビット構成）  
    kppt32　…………　やねうら王2017のKPPT型評価関数（32ビット構成）  
    kpp_kkpt32　……　やねうら王2017のKPP_KKPT型評価関数（32ビット構成）  
  
  indir, outdir  
    変換前、後の評価関数ファイル格納場所  
  
例：  
  
dir1に格納されたKPP_KKPT型評価関数をKPPT型に変換してdir2に格納する  
  
  skiploadingeval true  
  test evalconvert kpp_kkpt32 dir1 kppt32 dir2  
  
  
2018/4/29追記  
  
  新コマンドの操作説明  
  
  testコマンドに追加したオプションを説明します。  
  コマンドの意味についてはあえて説明はしません。そういうのは機械学習とか深層学習とかの参考書を  
  読んでいただければと思います。^^;  
  
  
  evaleqコマンド  
  
　　指定した範囲内の評価値を、指定した％分増減します。featuresオプションも指定できますが、形式が今までと  
　　異なります。  
  
　　　ALL 　　KK、KKP、KPP全てに適用（ディフォルト）  
　　　KK　　　KKのみに適用  
　　　KKP 　　KKPのみに適用  
　　　KPP 　　KPPのみに適用  
　　　KKPP　　KKPとKPPに適用（KKを除外）  
  
　　使用例  
  
　　　dir1のKKPとKPPについて、評価値の共通側の値が-200～200の範囲を90%に下げたものを、dir2に出力する。  
  
　　　test evaleq dir1 dir2 -200 200 90 KKPP  
  
　　以前にevalmerge eqオプションを作りましたが、evalmerge eqオプションとの違いは、  
  
　　　「共通側の評価値を基準として、共通側、手番側とも同時に増減する」  
  
　　ということです。  
  
　　例えば、以下のような評価値があったとします。(評価関数はdir1に格納されているものとします）  
  
　　　　　　　　共通側　　　　手番側  
　　　特徴A　　　100　　　　　　 20  
　　　特徴B　　　200　　　　　　100  
  
　　これをそれぞれ、以下のコマンドを実行した結果を示します。  
  
　　　test evalmerge dir1 dir1 dir2 90 eq 100 200  
  
　　　実行後  
  
　　　　　　　　共通側　　　　手番側  
　　　特徴A　　　 90　　　　　　20  
　　　特徴B　　　180　　　　　　90  
  
　　　test evaleq dir1 dir2 100 200 90  
  
　　　実行後  
  
　　　　　　　　共通側　　　　手番側  
　　　特徴A　　　 90　　　　　　18  
　　　特徴B　　　180　　　　　　90  

　　test evalmerge eqの場合、共通側、手番側それぞれ独立に調整されていたため、手番の時と非手番の時の評価が  
　　チグハグになってしまうことがありました。  
　　evaleqでは３駒関係をセットと増減するため、そのようなチグハグが起こらないようになっています。  
  
  
  evalreg、evalreg2コマンド  
  
　　evaleqコマンドをさらに発展させ、指定した範囲「以外」の評価値を、指定したシグモイド関数の曲線で減少させます。 
　　featuresオプションの指定はevaleqコマンドと同様です。  
  
　　書式  
  
　　　test [evalreg | evalreg2] 変更前評価関数ディレクトリ 変更後評価関数ディレクトリ 下限% [Ponanza定数] [features]  
　　　※Ponanza定数のディフォルトは600  
  
　　シグモイド関数は、以下の２つを用意しています。  
  
　　　evalreg  
　　　　exp((-abs(評価値) + 範囲) / Ponanza定数) * 下限% + 1 - 下限%  
　　　　※下限%は、パーセントを100で割ったもの  
  
　　　evalreg2  
　　　　-(exp((-abs(評価値) + 範囲) / Ponanza定数) * 下限%) + 1
　　　　※下限%は、パーセントを100で割ったもの  
  
　　　この関数の曲線グラフは、このフォルダにある画像を参照ください。  
  
　　使用例  
  
　　　dir1のKKPとKPPについて、評価値の共通側の値が-200～200の範囲以外を、下限値90%に設定した曲線で減少させた  
　　　ものを、dir2に出力する。曲線に使用するPonanza定数は600とする。  
  
　　　test evalreg dir1 dir2 200 90 600 KKPP  
　　
　　これは機械学習でいうところのL2正則化を行うことを目的としています。  
　　過学習になってしまった評価関数は全く使い物にならないため、捨ててしまっていたこともあるかと思いますが、  
　　このコマンドを適用して過学習部分を押し下げ、救済することができるようになっています。  
  
